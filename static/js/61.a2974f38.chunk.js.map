{"version":3,"file":"static/js/61.a2974f38.chunk.js","mappings":"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","sources":["api.js","components/MovieGalleryItem/MovieGalleryItem.styled.jsx","components/MovieGalleryItem/MovieGalleryItem.jsx","components/MovieGallery/MovieGallery.styled.jsx","components/MovieGallery/MovieGallery.jsx","components/Pagination/Pagination.styled.jsx","components/Pagination/Pagination.jsx","helpers/FormatDate.js","components/Searchbar/Searchbar.styled.jsx","components/Searchbar/Searchbar.jsx","pages/Movies.js"],"sourcesContent":["import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\nconst API_KEY = '9172c4d325a71ee6e99b7941097e9eed';\n\nexport const fetchImages = async (query, page) => {\n  const response = await axios.get(\n    `search/movie?query=${query.split('/')[1]}&api_key=${API_KEY}&page=${page}`\n  );\n  return response.data;\n};\n\nexport const fetchMovieById = async movieId => {\n  const response = await axios.get(`movie/${movieId}?api_key=${API_KEY}`);\n  return response.data;\n};\n\nexport const fetchTrendMovie = async page => {\n  const response = await axios.get(\n    `trending/movie/day?api_key=${API_KEY}&page=${page}`\n  );\n  return response.data;\n};\n\nexport const fetchSelectMovie = async movieId => {\n  const response = await axios.get(`movie/${movieId}?api_key=${API_KEY}`);\n  return response.data;\n};\n\nexport const fetchMovieCast = async movieId => {\n  const response = await axios.get(\n    `movie/${movieId}/credits?api_key=${API_KEY}`\n  );\n  return response.data;\n};\n\nexport const fetchMovieReviews = async movieId => {\n  const response = await axios.get(\n    `movie/${movieId}/reviews?api_key=${API_KEY}`\n  );\n  return response.data;\n};\n","import styled from 'styled-components';\n\nexport const MovieItem = styled.li`\n  border-radius: 8px;\n  background: #413b3b;\n  box-shadow: 0px 0px 7px 3px rgba(0, 0, 0, 0.25);\n\n  transition: transform 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n  &:hover {\n    transform: scale(1.03);\n    cursor: zoom-in;\n  }\n  /* border-radius: 8px; */\n  /* box-shadow: 0px 1px 3px 0px rgba(0, 0, 0, 0.2),\n    0px 1px 1px 0px rgba(0, 0, 0, 0.14), 0px 2px 1px -1px rgba(0, 0, 0, 0.12); */\n`;\n\nexport const MovieImg = styled.img`\n  width: 100%;\n  height: 400px;\n  object-fit: cover;\n  border-radius: 8px;\n`;\n\nexport const TextWraper = styled.div`\n  padding: 8px 8px 12px 8px;\n`;\n\nexport const MovieName = styled.h2`\n  font-size: 24px;\n  font-weight: 400;\n  line-height: 1.04;\n  margin-bottom: 4px;\n`;\n\nexport const MovieTextList = styled.ul`\n  display: flex;\n  grid-gap: 8px;\n`;\n\nexport const MovieTextItem = styled.li`\n  font-size: 16px;\n  font-weight: 400;\n  line-height: 1.25;\n  color: #c8c5c5;\n`;\n","import { Link, useLocation } from 'react-router-dom';\nimport {\n  MovieImg,\n  MovieItem,\n  MovieName,\n  MovieTextItem,\n  MovieTextList,\n  TextWraper,\n} from './MovieGalleryItem.styled';\nimport { formatDate } from 'helpers/FormatDate';\n\nexport const MovieGalleryItem = ({ movie }) => {\n  const defaultImg =\n    'https://via.placeholder.com/400x600.png?text=Poster+Not+Available';\n  const location = useLocation();\n\n  return (\n    <MovieItem>\n      <Link to={`/movies/${movie.id}`} state={{ from: location }}>\n        <MovieImg\n          src={\n            movie.poster_path\n              ? `https://image.tmdb.org/t/p/w500${movie.poster_path}`\n              : defaultImg\n          }\n          alt={movie.title}\n          width={'282px'}\n        />\n        <TextWraper>\n          <MovieName>{movie.title}</MovieName>\n          <MovieTextList>\n            {movie.release_date && (\n              <>\n                <MovieTextItem>\n                  {formatDate(movie.release_date, 'dd MMMM yyyy')}\n                </MovieTextItem>\n                <MovieTextItem>|</MovieTextItem>\n              </>\n            )}\n            <MovieTextItem>{movie.vote_average.toFixed(1)}</MovieTextItem>\n          </MovieTextList>\n        </TextWraper>\n      </Link>\n    </MovieItem>\n  );\n};\n","import styled from 'styled-components';\n\nexport const MovieList = styled.ul`\n  display: grid;\n  max-width: 100%;\n  grid-template-columns: repeat(auto-fill, minmax(282px, 1fr));\n  grid-gap: 24px;\n  margin-top: 0;\n  margin-bottom: 48px;\n  padding: 0;\n  list-style: none;\n  margin-left: auto;\n  margin-right: auto;\n`;\n","import { MovieGalleryItem } from 'components/MovieGalleryItem/MovieGalleryItem';\nimport { MovieList } from './MovieGallery.styled';\n\nexport const MovieGallery = ({ items }) => {\n  return (\n    <MovieList>\n      {items.map(item => (\n        <MovieGalleryItem key={item.id} movie={item} />\n      ))}\n    </MovieList>\n  );\n};\n","import styled from 'styled-components';\n\nexport const PaginationList = styled.ul`\n  display: flex;\n  justify-content: center;\n`;\n\nexport const PaginationItem = styled.li`\n  &.active {\n    background-color: #b64343;\n    border-radius: 6px;\n  }\n`;\n\nexport const PaginationLink = styled.a`\n  display: block;\n  padding: 0.75rem 1rem;\n  min-width: 3.5rem;\n  text-align: center;\n  font-weight: 400;\n  font-size: 16px;\n  transition: transform 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  border-radius: 6px;\n\n  &:hover {\n    color: #b64343;\n    background-color: white;\n    font-weight: 600;\n  }\n`;\n","import { useState } from 'react';\nimport {\n  PaginationItem,\n  PaginationLink,\n  PaginationList,\n} from './Pagination.styled';\n\nexport const Pagination = ({ onPageChange, currentPage, totalPages }) => {\n  const [pageNeighbours] = useState(2);\n  const LEFT_PAGE = 'LEFT';\n  const RIGHT_PAGE = 'RIGHT';\n\n  /**\n   * Helper method for creating a range of numbers\n   * range(1, 5) => [1, 2, 3, 4, 5]\n   */\n  const range = (from, to, step = 1) => {\n    let i = from;\n    const range = [];\n\n    while (i <= to) {\n      range.push(i);\n      i += step;\n    }\n\n    return range;\n  };\n\n  const fetchPageNumbers = () => {\n    const totalNumbers = pageNeighbours * 2 + 3;\n    const totalBlocks = totalNumbers + 2;\n\n    if (totalPages > totalBlocks) {\n      const startPage = Math.max(2, currentPage - pageNeighbours);\n      const endPage = Math.min(totalPages - 1, currentPage + pageNeighbours);\n      let pages = range(startPage, endPage);\n\n      const hasLeftSpill = startPage > 2;\n      const hasRightSpill = totalPages - endPage > 1;\n      const spillOffset = totalNumbers - (pages.length + 1);\n\n      switch (true) {\n        // handle: (1) < {5 6} [7] {8 9} (100)\n        case hasLeftSpill && !hasRightSpill: {\n          const extraPages = range(startPage - spillOffset, startPage - 1);\n          pages = [LEFT_PAGE, ...extraPages, ...pages];\n          break;\n        }\n\n        // handle: (1) {2 3} [4] {5 6} > (100)\n        case !hasLeftSpill && hasRightSpill: {\n          const extraPages = range(endPage + 1, endPage + spillOffset);\n          pages = [...pages, ...extraPages, RIGHT_PAGE];\n          break;\n        }\n\n        // handle: (1) < {4 5} [6] {7 8} > (100)\n        case hasLeftSpill && hasRightSpill:\n        default: {\n          pages = [LEFT_PAGE, ...pages, RIGHT_PAGE];\n          break;\n        }\n      }\n\n      return [1, ...pages, totalPages];\n    }\n\n    return range(1, totalPages);\n  };\n\n  // const visiblePages = getVisiblePages(currentPage, totalPages);\n  // function getVisiblePages(currentPage, totalPages) {\n  //   const visiblePages = [currentPage];\n  //   for (let i = 1; i <= 2; i++) {\n  //     if (currentPage - i > 1) {\n  //       visiblePages.unshift(currentPage - i);\n  //     }\n  //   }\n\n  //   if (currentPage - 3 > 1 && visiblePages[1] !== '...') {\n  //     visiblePages.unshift('...');\n  //   }\n  //   // else {\n\n  //   // }\n\n  //   for (let i = 1; i <= 2; i++) {\n  //     if (currentPage + i < totalPages) {\n  //       visiblePages.push(currentPage + i);\n  //     }\n  //   }\n\n  //   if (currentPage + 3 < totalPages) {\n  //     visiblePages.push('...');\n  //   }\n\n  //   if (visiblePages[0] > 1 || visiblePages[0] !== 1) {\n  //     visiblePages.unshift(1);\n  //   }\n\n  //   if (\n  //     visiblePages[visiblePages.length - 1] < totalPages ||\n  //     visiblePages[visiblePages.length - 1] !== totalPages\n  //   ) {\n  //     visiblePages.push(totalPages);\n  //   }\n\n  //   return visiblePages;\n  // }\n\n  const handleClick = page => evt => {\n    evt.preventDefault();\n    onPageChange(page);\n  };\n\n  const handleMoveLeft = evt => {\n    evt.preventDefault();\n    onPageChange(currentPage - pageNeighbours * 2 - 1);\n  };\n\n  const handleMoveRight = evt => {\n    evt.preventDefault();\n    onPageChange(currentPage + pageNeighbours * 2 + 1);\n  };\n\n  const pages = fetchPageNumbers();\n  return (\n    <div>\n      {totalPages >= 2 && (\n        <PaginationList>\n          {pages.map((page, index) => {\n            if (page === LEFT_PAGE)\n              return (\n                <PaginationItem key={index}>\n                  <PaginationLink\n                    href=\"#\"\n                    aria-label=\"Previous\"\n                    onClick={handleMoveLeft}\n                  >\n                    <span aria-hidden=\"true\">&laquo;</span>\n                  </PaginationLink>\n                </PaginationItem>\n              );\n\n            if (page === RIGHT_PAGE)\n              return (\n                <PaginationItem key={index}>\n                  <PaginationLink\n                    href=\"#\"\n                    aria-label=\"Next\"\n                    onClick={handleMoveRight}\n                  >\n                    <span aria-hidden=\"true\">&raquo;</span>\n                  </PaginationLink>\n                </PaginationItem>\n              );\n\n            return (\n              <PaginationItem\n                key={index}\n                className={`page-item${currentPage === page ? ' active' : ''}`}\n              >\n                <PaginationLink href=\"#\" onClick={handleClick(page)}>\n                  {page}\n                </PaginationLink>\n              </PaginationItem>\n            );\n          })}\n        </PaginationList>\n      )}\n    </div>\n  );\n\n  // return (\n  //   <div>\n  //     <ul>\n  //       {visiblePages.map(number => (\n  //         <li key={number}>\n  //           <button\n  //             onClick={() => onPageChange(number)}\n  //             className={\n  //               number === currentPage\n  //                 ? 'is-active pagination-btn'\n  //                 : 'pagination-btn'\n  //             }\n  //           >\n  //             {number}\n  //           </button>\n  //         </li>\n  //       ))}\n  //     </ul>\n  //   </div>\n  // );\n};\n","import { format } from 'date-fns';\n\nexport function formatDate(dateString, formatString = 'dd MMMM yyyy, HH:mm') {\n  const date = new Date(dateString);\n  return format(date, formatString);\n}\n","import styled from 'styled-components';\n\nexport const SearchbarWrapper = styled.div`\n  padding-top: 138px;\n  padding-bottom: 48px;\n`;\n\nexport const SearchbarTitle = styled.h1`\n  font-size: 48px;\n  font-weight: 400;\n  line-height: normal;\n`;\n\nexport const SearchForm = styled.form`\n  align-items: center;\n  display: flex;\n  justify-content: center;\n\n  margin-bottom: 56px;\n`;\n\nexport const SearchButton = styled.button`\n  border-radius: 0px 22px 22px 0px;\n  background-color: #b64343;\n  color: #fff;\n  width: 75px;\n  height: 48px;\n  display: inline-block;\n  box-shadow: 0px 0px 14px 1px rgba(47, 42, 42, 0.77);\n  border: none;\n\n  &:hover {\n    background-color: #ee4f4f;\n  }\n`;\n\nexport const SearchInput = styled.input`\n  border-radius: 22px 0px 0px 22px;\n  box-shadow: 0px 0px 14px 1px rgba(47, 42, 42, 0.77);\n  border: none;\n  width: 491px;\n  height: 48px;\n  padding: 10px 32px;\n  background-color: transparent;\n  display: inline-block;\n  color: #c8c5c5;\n  font-size: 24px;\n  line-height: 1.17;\n\n  &::placeholder {\n    color: #c8c5c5;\n    font-size: 24px;\n    line-height: 1.17;\n  }\n`;\n","import { RiSearch2Line } from 'react-icons/ri';\nimport {\n  SearchButton,\n  SearchForm,\n  SearchInput,\n  SearchbarTitle,\n  SearchbarWrapper,\n} from './Searchbar.styled';\n\nexport const Searchbar = ({ onSubmit, query }) => {\n  const title = query\n    ? `Here's what we found with the word “${query.split('/')[1]}”`\n    : 'What would you like to watch today?';\n\n  return (\n    <SearchbarWrapper>\n      <SearchForm onSubmit={onSubmit}>\n        <SearchInput\n          type=\"text\"\n          name=\"query\"\n          placeholder=\"Start typing here...\"\n        />\n        <SearchButton type=\"submit\">\n          <RiSearch2Line size={'32px'} />\n        </SearchButton>\n      </SearchForm>\n      <SearchbarTitle>{title}</SearchbarTitle>\n    </SearchbarWrapper>\n  );\n};\n","import { MovieGallery } from 'components/MovieGallery/MovieGallery';\nimport { Searchbar } from 'components/Searchbar/Searchbar';\nimport { fetchImages } from 'api';\nimport { useEffect, useState } from 'react';\nimport toast, { Toaster } from 'react-hot-toast';\nimport { useSearchParams } from 'react-router-dom';\nimport { Pagination } from 'components/Pagination/Pagination';\nimport { Loader } from 'components/Loader/Loader';\n\nexport default function Movies() {\n  const [movies, setMovie] = useState([]);\n  const [error, setError] = useState(false);\n  const [isLoading, setIsLoading] = useState(false);\n  const [totalPages, setTotalPages] = useState(1);\n\n  const [searchParams, setSearchParams] = useSearchParams();\n  const query = searchParams.get('query') ?? '';\n  const page = Number(searchParams.get('page'));\n\n  const handleSubmit = evt => {\n    evt.preventDefault();\n\n    if (evt.target.elements.query.value.trim() === '') {\n      toast.error('You have not entered anything!');\n    } else {\n      setSearchParams({\n        query: `${Date.now()}/${evt.target.elements.query.value}`,\n        page: 1,\n      });\n      setTotalPages(1);\n\n      setMovie([]);\n    }\n  };\n\n  useEffect(() => {\n    if (query === '') {\n      return;\n    }\n\n    async function getMovie() {\n      try {\n        setIsLoading(true);\n        setError(false);\n        const allMovies = await fetchImages(query, page);\n        if (allMovies.length === 0) {\n          return toast.error(\n            'Opps, there are no pictures according to your request... '\n          );\n        }\n        setMovie([...allMovies.results]);\n        setTotalPages(\n          allMovies.total_pages <= 100 ? allMovies.total_pages : 100\n        );\n      } catch (error) {\n        if (error.code !== 'ERR_CANCELED') {\n          setError(true);\n        }\n      } finally {\n        setIsLoading(false);\n      }\n    }\n\n    getMovie();\n  }, [query, page]);\n\n  const onPageChange = pageNumber => {\n    setSearchParams(params => {\n      params.set('page', pageNumber);\n      return params;\n    });\n  };\n\n  return (\n    <div>\n      <Searchbar query={query} onSubmit={handleSubmit} />\n      {movies.length > 0 && !isLoading && <MovieGallery items={movies} />}\n      {totalPages >= 2 && !isLoading && (\n        <Pagination\n          currentPage={page}\n          totalPages={totalPages}\n          onPageChange={onPageChange}\n        />\n      )}\n      <Toaster position=\"top-right\" />\n      {isLoading && <Loader />}\n      {error && <div>OPPS! THERE WAS AN ERROR!</div>}\n    </div>\n  );\n}\n"],"names":["axios","API_KEY","fetchImages","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","query","page","response","wrap","_context","prev","next","concat","split","sent","abrupt","data","stop","_x","_x2","apply","arguments","fetchMovieById","_ref2","_callee2","movieId","_context2","_x3","fetchTrendMovie","_ref3","_callee3","_context3","_x4","fetchSelectMovie","_ref4","_callee4","_context4","_x5","fetchMovieCast","_ref5","_callee5","_context5","_x6","fetchMovieReviews","_ref6","_callee6","_context6","_x7","MovieItem","styled","_templateObject","_taggedTemplateLiteral","MovieImg","_templateObject2","TextWraper","_templateObject3","MovieName","_templateObject4","MovieTextList","_templateObject5","MovieTextItem","_templateObject6","MovieGalleryItem","movie","location","useLocation","_jsx","children","_jsxs","Link","to","id","state","from","src","poster_path","alt","title","width","release_date","_Fragment","formatDate","vote_average","toFixed","MovieList","MovieGallery","items","map","item","PaginationList","PaginationItem","PaginationLink","Pagination","onPageChange","currentPage","totalPages","_useState","useState","pageNeighbours","_slicedToArray","LEFT_PAGE","RIGHT_PAGE","range","step","length","undefined","i","push","handleClick","evt","preventDefault","handleMoveLeft","handleMoveRight","pages","totalNumbers","startPage","Math","max","endPage","min","hasLeftSpill","hasRightSpill","spillOffset","extraPages","_toConsumableArray","fetchPageNumbers","index","href","onClick","className","dateString","formatString","date","Date","format","SearchbarWrapper","SearchbarTitle","SearchForm","SearchButton","SearchInput","Searchbar","onSubmit","type","name","placeholder","RiSearch2Line","size","Movies","_searchParams$get","_useState2","movies","setMovie","_useState3","_useState4","error","setError","_useState5","_useState6","isLoading","setIsLoading","_useState7","_useState8","setTotalPages","_useSearchParams","useSearchParams","_useSearchParams2","searchParams","setSearchParams","get","Number","useEffect","_getMovie","allMovies","toast","results","total_pages","t0","code","finish","getMovie","target","elements","value","trim","now","pageNumber","params","set","Toaster","position","Loader"],"sourceRoot":""}