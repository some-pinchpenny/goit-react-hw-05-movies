{"version":3,"file":"static/js/247.faac2c0d.chunk.js","mappings":"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","sources":["api.js","components/Cast/Cast.jsx","components/Cast/Cast.styled.jsx"],"sourcesContent":["import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\nconst API_KEY = '9172c4d325a71ee6e99b7941097e9eed';\n\nexport const fetchImages = async (query, page) => {\n  const response = await axios.get(\n    `search/movie?query=${query.split('/')[1]}&api_key=${API_KEY}&page=${page}`\n  );\n  return response.data;\n};\n\nexport const fetchMovieById = async movieId => {\n  const response = await axios.get(`movie/${movieId}?api_key=${API_KEY}`);\n  return response.data;\n};\n\nexport const fetchTrendMovie = async page => {\n  const response = await axios.get(\n    `trending/movie/day?api_key=${API_KEY}&page=${page}`\n  );\n  return response.data;\n};\n\nexport const fetchSelectMovie = async movieId => {\n  const response = await axios.get(`movie/${movieId}?api_key=${API_KEY}`);\n  return response.data;\n};\n\nexport const fetchMovieCast = async movieId => {\n  const response = await axios.get(\n    `movie/${movieId}/credits?api_key=${API_KEY}`\n  );\n  return response.data;\n};\n\nexport const fetchMovieReviews = async movieId => {\n  const response = await axios.get(\n    `movie/${movieId}/reviews?api_key=${API_KEY}`\n  );\n  return response.data;\n};\n","import { fetchMovieCast } from 'api';\nimport { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport {\n  ActorName,\n  ActorPhoto,\n  CastItem,\n  CastList,\n  CastTextWraper,\n  DetailsTitle,\n} from './Cast.styled';\nimport { Loader } from 'components/Loader/Loader';\n\nexport default function Cast() {\n  const { movieId } = useParams();\n  const [cast, setCast] = useState([]);\n  const [error, setError] = useState(false);\n  const [isLoading, setIsLoading] = useState(false);\n\n  useEffect(() => {\n    async function fetchCast(id) {\n      try {\n        setIsLoading(true);\n        setError(false);\n        const fechedCast = await fetchMovieCast(id);\n        setCast([...fechedCast.cast]);\n      } catch {\n        setError(true);\n      } finally {\n        setIsLoading(false);\n      }\n    }\n\n    fetchCast(movieId);\n  }, [movieId]);\n\n  const defaultImg =\n    'https://via.placeholder.com/400x600.png?text=Poster+Not+Available';\n\n  return (\n    <div>\n      {cast.length > 0 && !isLoading && (\n        <section>\n          <DetailsTitle>Cast</DetailsTitle>\n          <CastList>\n            {cast.map(actor => (\n              <CastItem key={actor.id}>\n                <ActorPhoto\n                  src={\n                    actor.profile_path\n                      ? `https://image.tmdb.org/t/p/w500${actor.profile_path}`\n                      : defaultImg\n                  }\n                  alt={actor.name}\n                  width={'282px'}\n                />\n                <CastTextWraper>\n                  <ActorName>{actor.name}</ActorName>\n                </CastTextWraper>\n              </CastItem>\n            ))}\n          </CastList>\n        </section>\n      )}\n      {isLoading && <Loader />}\n      {error && <div>OPPS! THERE WAS AN ERROR!</div>}\n    </div>\n  );\n}\n","import styled from 'styled-components';\n\nexport const DetailsTitle = styled.h2`\n  color: #c8c5c5;\n  font-size: 40px;\n  font-weight: 400;\n  line-height: normal;\n  margin-bottom: 32px;\n`;\n\nexport const CastList = styled.ul`\n  display: grid;\n  max-width: calc(100vw - 72px);\n  grid-template-columns: repeat(auto-fill, minmax(282px, 1fr));\n  grid-gap: 24px;\n  margin-top: 0;\n  margin-bottom: 48px;\n  padding: 0;\n  list-style: none;\n  margin-left: auto;\n  margin-right: auto;\n`;\n\nexport const CastItem = styled.li`\n  border-radius: 8px;\n  background: #413b3b;\n  box-shadow: 0px 0px 7px 3px rgba(0, 0, 0, 0.25);\n\n  transition: transform 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n  &:hover {\n    transform: scale(1.03);\n    cursor: zoom-in;\n  }\n`;\n\nexport const ActorPhoto = styled.img`\n  width: 100%;\n  height: 400px;\n  object-fit: cover;\n  border-radius: 8px;\n`;\n\nexport const CastTextWraper = styled.div`\n  padding: 8px 8px 12px 8px;\n`;\n\nexport const ActorName = styled.h2`\n  font-size: 24px;\n  font-weight: 400;\n  line-height: 1.04;\n  margin-bottom: 4px;\n`;\n"],"names":["axios","API_KEY","fetchImages","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","query","page","response","wrap","_context","prev","next","concat","split","sent","abrupt","data","stop","_x","_x2","apply","arguments","fetchMovieById","_ref2","_callee2","movieId","_context2","_x3","fetchTrendMovie","_ref3","_callee3","_context3","_x4","fetchSelectMovie","_ref4","_callee4","_context4","_x5","fetchMovieCast","_ref5","_callee5","_context5","_x6","fetchMovieReviews","_ref6","_callee6","_context6","_x7","Cast","useParams","_useState","useState","_useState2","_slicedToArray","cast","setCast","_useState3","_useState4","error","setError","_useState5","_useState6","isLoading","setIsLoading","useEffect","_fetchCast","id","fechedCast","_toConsumableArray","t0","finish","fetchCast","_jsxs","children","length","_jsx","DetailsTitle","CastList","map","actor","CastItem","ActorPhoto","src","profile_path","alt","name","width","CastTextWraper","ActorName","Loader","styled","_templateObject","_taggedTemplateLiteral","_templateObject2","_templateObject3","_templateObject4","_templateObject5","_templateObject6"],"sourceRoot":""}